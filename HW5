//–Ø —Å–æ–µ–¥–µ–Ω–∏–ª 4 –∏ 5 –∑–∞–¥–∞–Ω–∏—è –Ω–∞–¥–µ—é—Å—å —ç—Ç–æ –Ω–µ –ø–ª–æ—Ö–æ?üòä

import 'package:flutter/material.dart';

class LoginScreen extends StatefulWidget {
  @override
  State<LoginScreen> createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  bool _obscurePassword = true;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(24.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              SizedBox(height: 30),
              Text(
                'Sign In',
                style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
              ),
              SizedBox(height: 40),
              Text(
                'EMAIL OR PHONE',
                style: TextStyle(color: Colors.black54, fontWeight: FontWeight.bold),
              ),
              TextFormField(
                initialValue: 'Loremipsum@gmail.com',
                decoration: InputDecoration(
                  hintText: 'example@gmail.com',
                ),
              ),
              SizedBox(height: 20),
              Text(
                'PASSWORD',
                style: TextStyle(color: Colors.black54, fontWeight: FontWeight.bold),
              ),
              TextFormField(
                obscureText: _obscurePassword,
                decoration: InputDecoration(
                  suffixIcon: IconButton(
                    icon: Icon(
                      _obscurePassword ? Icons.visibility_off : Icons.visibility,
                    ),
                    onPressed: () {
                      setState(() {
                        _obscurePassword = !_obscurePassword;
                      });
                    },
                  ),
                ),
              ),
              SizedBox(height: 10),
              Align(
                alignment: Alignment.centerRight,
                child: TextButton(
                  onPressed: () {},
                  child: Text('Forgot password?'),
                ),
              ),
              SizedBox(height: 10),
              ElevatedButton(
                onPressed: () {},
                style: ElevatedButton.styleFrom(
                  minimumSize: Size(double.infinity, 50),
                  backgroundColor: Colors.teal[800],
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                child: Text('Log In'),
              ),
              SizedBox(height: 20),
              Center(child: Text('OR')),
              SizedBox(height: 20),
              _socialButton(
                context,
                icon: Icons.g_mobiledata,
                label: 'Continue With Google',
                onTap: () {},
              ),
              SizedBox(height: 10),
              _socialButton(
                context,
                icon: Icons.facebook,
                label: 'Continue With Facebook',
                onTap: () {},
              ),
              Spacer(),
              Center(
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Text("Don't Have an account yet? "),
                    GestureDetector(
                      onTap: () {
                        // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                      },
                      child: Text(
                        'SIGN UP',
                        style: TextStyle(
                          fontWeight: FontWeight.bold,
                          color: Colors.orange,
                          fontStyle: FontStyle.italic,
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _socialButton(BuildContext context, {required IconData icon, required String label, required VoidCallback onTap}) {
    return OutlinedButton.icon(
      onPressed: onTap,
      icon: Icon(icon, size: 24),
      label: Text(label),
      style: OutlinedButton.styleFrom(
        minimumSize: Size(double.infinity, 50),
        side: BorderSide(color: Colors.black),
      ),
    );
  }
}
